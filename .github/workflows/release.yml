name: Release

on:
  push:
    branches: [master]

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade build twine sphinx furo sphinx-autodoc-typehints bumpversion pytest

      - name: Run tests
        run: |
          pip install -e .[docs]
          pytest

      - name: Configure Git identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Bump version (__init__.py only)
        id: bump
        run: |
          CURRENT=$(python -c "import re; f=open('src/tree_height_analysis_57/__init__.py').read(); print(re.search(r'__version__ = \"(.*?)\"', f).group(1))")
          echo "Current version: $CURRENT"
          bumpversion patch --allow-dirty
          NEW=$(python -c "import re; f=open('src/tree_height_analysis_57/__init__.py').read(); print(re.search(r'__version__ = \"(.*?)\"', f).group(1))")
          echo "New version: $NEW"
          echo "new_version=${NEW}" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add .
          git commit -m "ci: bump version to ${{ steps.bump.outputs.new_version }}" || echo "No version changes to commit"
          git push origin HEAD

      - name: Build dist
        run: |
          rm -rf dist/
          python -m build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Build Sphinx HTML docs
        run: |
          sphinx-build -b html docs/source docs/build/html

      - name: Commit dist/ and docs/
        run: |
          git add -f dist/ docs/build/html/
          git commit -m "ci: add built dist and docs for ${{ steps.bump.outputs.new_version }}" || echo "No dist/docs changes to commit"
          git push origin HEAD

      - name: ✅ Set GitHub Status Check using PAT
        if: success()
        env:
          SHA: ${{ github.sha }}
          REPO: ${{ github.repository }}
          PAT: ${{ secrets.PAT_TOKEN }}
          RUN_ID: ${{ github.run_id }}
        run: |
          sudo apt update && sudo apt install jq -y
          curl -X POST \
            -H "Authorization: Bearer $PAT" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$REPO/statuses/$SHA \
            -d "$(jq -n \
              --arg state "success" \
              --arg context "✅ Final Status" \
              --arg description "All release steps succeeded." \
              --arg target_url "https://github.com/$REPO/actions/runs/$RUN_ID" \
              '{state: $state, context: $context, description: $description, target_url: $target_url}')"
